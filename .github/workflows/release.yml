name: Build and Publish Docker Image

on:
  push:
    branches: [ main ]
permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Add host key
        run: |
          mkdir -p $HOME/.ssh
          ssh-keyscan -H $SSH_HOST >> $HOME/.ssh/known_hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Install Docker Context dependencies
        run: |
          mkdir -p $HOME/.docker
          echo "$SSH_KEY" > $HOME/.docker/ssh_key
          chmod 600 $HOME/.docker/ssh_key

      - name: Create Docker Context
        run: |
          docker context create swarm-remote --docker "host=ssh://peter@peteredm.com,key=$HOME/.docker/ssh_key"
          docker context use swarm-remote
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Deploy stack
        run: docker stack deploy --prune --with-registry-auth --compose-file compose.yml swarm
