name: Build and Deploy Preview
on:
  pull_request:
    branches: [ main ]
  push:
    branches:
      - '**'
      - '!main'  # Exclude main branch if you don't want to deploy it
permissions:
  contents: read
  packages: write
  pull-requests: write  # Add this permission to comment on PRs
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write  # Add this permission to the job as well
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Get branch name
        id: branch-name
        run: |
          # For pull requests, use the head branch name
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "branch=${GITHUB_HEAD_REF}" >> $GITHUB_OUTPUT
          else
            echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi
          
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long
            type=raw,value=${{ steps.branch-name.outputs.branch }}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Create env file
        run: |
          touch .env.deploy
          echo "CADDY_PROXY_URL=preview-${{ steps.branch-name.outputs.branch }}.peteredm.com" >> .env.deploy
          
      - name: Deploy stack
        uses: cssnr/stack-deploy-action@v1
        with:
          name: swarm-${{ steps.branch-name.outputs.branch }}
          file: compose.yml
          host: peteredm.com
          user: peter
          ssh_key: ${{ secrets.SSH_KEY }}
          env_file: .env.deploy

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = `https://preview-${context.payload.pull_request.head.ref}.peteredm.com`;
            const comment = `ðŸš€ Preview deployment is ready!\n\n[View Preview](${url})`;
            
            // Get existing comments
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            // Find if we already commented
            const botComment = comments.data.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Preview deployment is ready');
            });
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
